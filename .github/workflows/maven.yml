# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
permissions:
  contents: read
  security-events: write
  
jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Wait for MySQL
      run: |
        sudo apt-get install -y mysql-client
        until mysqladmin ping -h127.0.0.1 -uroot -proot --silent; do
          echo "Waiting for MySQL to be ready..."
          sleep 5
        done

    - name: Create database
      run: |
        mysql -h 127.0.0.1 -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS bcmea_expo;'
    - name: Build with Maven
      run: mvn clean install -Dspring.profiles.active=prod

    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
          image: rajeeb99/bcmea-repo
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
